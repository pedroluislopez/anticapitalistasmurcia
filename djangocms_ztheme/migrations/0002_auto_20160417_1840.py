# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-17 16:40
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('cms', '0013_urlconfrevision'),
        ('djangocms_ztheme', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ZThemeColumn',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cms.CMSPlugin')),
                ('xs', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)], verbose_name='extra small devices')),
                ('xs_offset', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)], verbose_name='extra small devices offset')),
                ('xs_push', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)], verbose_name='extra small devices push')),
                ('xs_pull', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)], verbose_name='extra small devices pull')),
                ('sm', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)], verbose_name='small devices')),
                ('sm_offset', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)], verbose_name='small devices offset')),
                ('sm_push', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)], verbose_name='small devices push')),
                ('sm_pull', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)], verbose_name='small devices pull')),
                ('md', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)], verbose_name='medium devices')),
                ('md_offset', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)], verbose_name='medium devices offset')),
                ('md_push', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)], verbose_name='medium devices push')),
                ('md_pull', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)], verbose_name='medium devices pull')),
                ('lg_devices', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)], verbose_name='large devices')),
                ('lg_offset', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)], verbose_name='large devices offset')),
                ('lg_push', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)], verbose_name='large devices push')),
                ('lg_pull', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)], verbose_name='large devices pull')),
            ],
            options={
                'db_table': 'djangocms_ztheme_column',
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='ZThemeSection',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cms.CMSPlugin')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('top', models.BooleanField(default=False, verbose_name='top')),
                ('xs', models.BooleanField(default=False, verbose_name='extra small devices')),
                ('sm', models.BooleanField(default=False, verbose_name='small devices')),
                ('md', models.BooleanField(default=False, verbose_name='medium devices')),
                ('lg', models.BooleanField(default=False, verbose_name='large devices')),
                ('extra_css_classes', models.CharField(blank=True, help_text='Extra CSS classes for HTML tag.', max_length=255, null=True, verbose_name='extra css classes')),
            ],
            options={
                'db_table': 'djangocms_ztheme_section',
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.AlterField(
            model_name='sitesocialnetwork',
            name='name',
            field=models.CharField(max_length=255, verbose_name='name'),
        ),
    ]
